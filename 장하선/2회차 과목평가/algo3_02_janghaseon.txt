arr=[5,1,4,2,8]

n=len(arr)
for i in range(n):
    for j in range(i):
        if arr[j]>arr[j+1]:
            arr[j],arr[j+1]=arr[j+1],arr[j]

1. arr[j]<arr[j+1] -> arr[j]>arr[j+1]
기존 코드인 arr[j]<arr[j+1]는 j+i번 index의 값이 j번째 index의 값보다 큰 경우 두 원소의 위치를 바꾸는 행위이다.
즉, 후에 오는 값이 더 큰 경우 서로의 위치를 교환하는 방식이므로 정렬이 되지 않는다.
정리하자면, 기존 코드는 오름차순 정렬이 아니라 내림차순 정렬인 경우 수행해주는 동작이다. 따라서 오름차순 정렬을 구현하는 데에 사용하기에 적합하지 않은 비교 방법이다.
따라서, 오름차순 정렬을 수행하기 위해서는 부등호의 방향을 바꾸는 비교를 수행해야 한다.

2. arr[j],arr[j+1]==arr[j+1],arr[j] -> arr[j],arr[j+1]=arr[j+1],arr[j]
'=='은 비교 연산자이다.
버블 소트를 구현하기 위해서는 상단의 if 조건을 만족하는 경우 두 원소의 위치를 바꿔 할당해 주어야 한다.
비교 연산자는 좌변과 우변의 값을 비교해 True/False를 반환하는 연산을 수행하기에 이는 사용에 적합하지 않다.
따라서 비교 연산자가 아닌 할당 연산자인 '='을 사용해 주어 정렬된 결과를 할당해 주어야 한다.