# 끔찍한 shapes 먼저 만들어주기
shapes = [
    [(0, 0), (0, 1), (0, 2), (0, 3)],# 0
    [(0, 0), (1, 0), (2, 0), (3, 0)],
    [(0, 0), (0, 1), (1, 0), (1, 1)],# 2
    [(0, 2), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],# 4
    [(0, 0), (0, 1), (0, 2), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 0)],# 6
    [(0, 1), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 1)],# 8
    [(1, 0), (0, 1), (0, 2), (1, 1)],
    [(0, 0), (0, 1), (1, 1), (1, 2)],# 10
    [(0, 1), (1, 1), (2, 1), (2, 0)],
    [(0, 0), (0, 1), (1, 1), (2, 1)],# 12
    [(0, 0), (1, 0), (2, 0), (2, 1)],
    [(0, 0), (0, 1), (1, 0), (2, 0)],# 14
    [(0, 1), (1, 0), (1, 1), (2, 1)],
    [(0, 0), (1, 0), (1, 1), (2, 0)],# 16
    [(0, 1), (1, 0), (1, 1), (2, 0)],
    [(0, 0), (1, 0), (1, 1), (2, 1)] # 18
]

def tetro(i,j):
    global res
    for shape in shapes:
        tmp=0
        for x,y in shape:
            nx,ny=i+x,j+y
            if 0<=nx<n and 0<=ny<m:
                tmp+=board[nx][ny]
            else:
                break
        res=max(res,tmp)
    return res

n,m=map(int,input().split())
board=[list(map(int,input().split())) for _ in range(n)]
res=0
for i in range(n):
    for j in range(m):
        tetro(i,j)
print(res)